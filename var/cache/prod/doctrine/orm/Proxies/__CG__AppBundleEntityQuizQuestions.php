<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class QuizQuestions extends \AppBundle\Entity\QuizQuestions implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'quizId', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'number', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'question', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'answer1', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'answer2', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'answer3', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'answer4', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'trueAnswer', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'lesson', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'img', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'points', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'created'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'quizId', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'number', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'question', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'answer1', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'answer2', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'answer3', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'answer4', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'trueAnswer', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'lesson', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'img', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'points', '' . "\0" . 'AppBundle\\Entity\\QuizQuestions' . "\0" . 'created'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (QuizQuestions $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuizId($quizId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuizId', [$quizId]);

        return parent::setQuizId($quizId);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuizId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuizId', []);

        return parent::getQuizId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuestion($question)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuestion', [$question]);

        return parent::setQuestion($question);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuestion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuestion', []);

        return parent::getQuestion();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnswer1($answer1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnswer1', [$answer1]);

        return parent::setAnswer1($answer1);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnswer1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnswer1', []);

        return parent::getAnswer1();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnswer2($answer2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnswer2', [$answer2]);

        return parent::setAnswer2($answer2);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnswer2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnswer2', []);

        return parent::getAnswer2();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnswer3($answer3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnswer3', [$answer3]);

        return parent::setAnswer3($answer3);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnswer3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnswer3', []);

        return parent::getAnswer3();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnswer4($answer4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnswer4', [$answer4]);

        return parent::setAnswer4($answer4);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnswer4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnswer4', []);

        return parent::getAnswer4();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrueAnswer($trueAnswer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrueAnswer', [$trueAnswer]);

        return parent::setTrueAnswer($trueAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrueAnswer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrueAnswer', []);

        return parent::getTrueAnswer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoints($points)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoints', [$points]);

        return parent::setPoints($points);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoints', []);

        return parent::getPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', []);

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber($number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', [$number]);

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getLesson()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLesson', []);

        return parent::getLesson();
    }

    /**
     * {@inheritDoc}
     */
    public function setLesson($lesson)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLesson', [$lesson]);

        return parent::setLesson($lesson);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg', []);

        return parent::getImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg($img)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg', [$img]);

        return parent::setImg($img);
    }

}
