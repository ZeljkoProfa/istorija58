<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;
/**
 * VideoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VideoRepository extends \Doctrine\ORM\EntityRepository
{
    
    /**
     * Get all videos for db in the back section
     * @param integer $currentPage The current page (passed from controller)
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function getVideos($currentPage = 1, $limit) {
        // 
        $query = $this->createQueryBuilder('u')
                        ->orderBy('u.id', 'DESC')
                        ->getQuery();
        $paginator = $this->paginate($query, $currentPage, $limit);

        return $paginator;
    }
    
    /**
     * Get searched videos from db.
     * @param integer $currentPage The current page (passed from controller)
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function searchVids($string, $currentPage = 1) {
        // Getting records from video. Returns array.
        $query = $this->createQueryBuilder('u')
                ->where('u.status = 1', 'u.title LIKE :string')
                ->setParameter('string', '%' . $string . '%')
                ->orderBy('u.id', 'DESC')
                ->getQuery();
        $paginator = $this->paginate($query, $currentPage);

        return $paginator;
    }
    
    /**
     *
     *   
     * @param integer            $page  
     * @param integer            $limit 
     *
     * @return \Doctrine\ORM\Tools\Pagination\Paginator
     */
    public function paginate($dql, $page = 1, $limit = 10) {
        $paginator = new Paginator($dql);
        $paginator->setUseOutputWalkers(false);
        
        
     
        $paginator->getQuery()
                ->setFirstResult($limit * ($page - 1)) 
                ->setMaxResults($limit); // Limit

        return $paginator;
    }
}
